<?xml version="1.0" encoding="UTF-8"?>

<project name="r-c4d3.framework-as3" default="-usage" basedir="./">

<description>
Tasks to build and package the r-c4d3 as3 framework.
</description>
	
	<property name="dir.trunk" value=".."/>
	<import file="../build_init.xml"/>
	
	<property name="semver.major" value="0"/>
	<property name="semver.minor" value="3"/>
	
	<property name="dir.source" value="${basedir}/source"/>
	<property name="dir.config" value="${basedir}/config"/>
	<property name="dir.target" value="${basedir}/target"/>
	
	<property name="dir.test" value="${basedir}/test"/>
	<property name="dir.example" value="${basedir}/example"/>
	
	<property name="dir.documentation" value="${basedir}/../_documentation/framework-api"/>
	<property name="dir.releases" value="${basedir}/../_releases"/>
	
	<property file="build.properties"/>
	
	
    <target name="build" depends="compile, haxe, example, document, release" 
		description="&gt; this is the main task: compile, haxe, example, document, release"/>
	
	<target name="clean" description="remove the contents of ${dir.target}">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dir.target}" includes="**/*"/>
		</delete>
	</target>
	
    <target name="version" description="sets semver and compile date properties">
		<semver project="framework" major="${semver.major}" minor="${semver.minor}" />
		<!--
		strings must be double-qouted, see:
		http://blogs.adobe.com/flexdoc/files/flexdoc/conditionalcompilation.pdf
		-->
		<property name="semver.framework.quoted" value="'${semver.framework}'" />
		<property name="version.year.quoted" value="'${date.year}'" />
		<property name="version.month.quoted" value="'${date.month}'" />
		<property name="version.day.quoted" value="'${date.day}'" />
		<property name="version.hour.quoted" value="'${date.hour}'" />
		<property name="version.minute.quoted" value="'${date.minute}'" />
		<property name="version.second.quoted" value="'${date.second}'" />
	</target>
	
    <target name="compile" depends="clean, version" description="compile the r-c4d3.swc">
    	<exec executable="${flex.compc}" failonerror="true">
			<arg line='-output="${dir.target}/r-c4d3.swc"'/>
			<arg line='-load-config+="${dir.config}/compc-config.xml"'/>
			<arg line='-define+=VERSION::semver,"${semver.framework.quoted}"'/>
			<arg line='-define+=VERSION::year,"${version.year.quoted}"'/>
			<arg line='-define+=VERSION::month,"${version.month.quoted}"'/>
			<arg line='-define+=VERSION::day,"${version.day.quoted}"'/>
			<arg line='-define+=VERSION::hour,"${version.hour.quoted}"'/>
			<arg line='-define+=VERSION::minute,"${version.minute.quoted}"'/>
			<arg line='-define+=VERSION::second,"${version.second.quoted}"'/>
		</exec>
	</target>
	
	<target name="test" description="calls the build task of ${basedir}/test/build.xml">
		<ant dir="${dir.test}" target="build" inheritall="false" />
	</target>
	
	<target name="example" description="calls the build task of ${basedir}/example/build.xml">
		<ant dir="${dir.example}" target="build" inheritall="false" />
	</target>
	
    <target name="haxe" depends="clean, compile" if="haxe.haxe"
		description="generate hx-classes from the r-c4d3.swc">
		
		<mkdir dir="${dir.target}/temp"/>
		<unzip src="${dir.target}/r-c4d3.swc" dest="${dir.target}/temp"/>
    	<exec executable="${haxe.haxe}" dir="${dir.target}" failonerror="false"
			resultproperty="exitcode" errorproperty="exiterror">
			<arg line="--gen-hx-classes '${dir.target}/temp/library.swf'"/>
		</exec>
		<delete dir="${dir.target}/temp"/>
		
		<!-- Only finish if the haxe execution was successful. -->
		<!-- If we tried to finish anyways, the build would fail due to nonexistent files. -->
		<condition property="doHaxeFinish">
			<equals arg1="${exitcode}" arg2="0" trim="true"/>
		</condition>
		<antcall target="haxe.finish"/>
		<antcall target="haxe.fail"/>
	</target>
	
	<target name="haxe.finish" if="doHaxeFinish">
		<zip destfile="${dir.target}/framework-hxclasses.zip" basedir="${dir.target}/hxclasses"/>
	</target>
	
	<target name="haxe.fail" unless="doHaxeFinish">
		<echo message="Failed to generate hx-classes. The error given by haXe is as follows:"/>
		<echo message="${exiterror}"/>
	</target>
	
    <target name="document" depends="clean, version" description="create asdoc for the framework api">
		<mkdir dir="${dir.target}/asdoc"/>
    	<exec executable="${flex.asdoc}">
			<arg line="-output='${dir.target}/asdoc'"/>
			<arg line="-footer='Copyleft ${date.year} Pixeldroid'"/>
			<arg line="-load-config+='${dir.config}/asdoc-config.xml'"/>
			<arg line='-define+=VERSION::semver,"${semver.framework.quoted}"'/>
			<arg line='-define+=VERSION::year,"${version.year.quoted}"'/>
			<arg line='-define+=VERSION::month,"${version.month.quoted}"'/>
			<arg line='-define+=VERSION::day,"${version.day.quoted}"'/>
			<arg line='-define+=VERSION::hour,"${version.hour.quoted}"'/>
			<arg line='-define+=VERSION::minute,"${version.minute.quoted}"'/>
			<arg line='-define+=VERSION::second,"${version.second.quoted}"'/>
		</exec>
		<zip destfile="${dir.target}/framework-api.zip" basedir="${dir.target}/asdoc"/>
		<copy todir="${dir.documentation}" failonerror="false">
			<fileset dir="${dir.target}/asdoc">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="release" description="copy zips to ${dir.releases}">
		<copy todir="${dir.releases}" failonerror="false">
			<fileset dir="${dir.target}">
				<include name="**/*.swc"/>
				<include name="**/*.zip"/>
			</fileset>
		</copy>
	</target>

</project>

