<?xml version="1.0" encoding="UTF-8"?>

<project name="r-c4d3.roms.Asteroids-as3" default="-usage" basedir="./">

<description>
Tasks to build and package the AS3 Asteroids game rom.
</description>
	
	<property name="dir.trunk" value="../.."/>
	<import file="${dir.trunk}/build_init.xml"/>
	
	<property name="dir.source" value="${basedir}/source"/>
	<property name="dir.config" value="${basedir}/config"/>
	<property name="dir.target" value="${basedir}/target"/>
	
	<property name="dir.releases" value="${dir.trunk}/_releases"/>
	
	
	
	<target name="-usage" description="ant &lt;target&gt;">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>
	
    <target name="build" depends="compile, package, release, launch" 
		description="&gt; this is the main task: compile, package, release"/>
	
	<target name="clean" description="remove the contents of ${dir.target}">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dir.target}" includes="**/*"/>
		</delete>
	</target>
	
    <target name="compile" depends="clean" description="compile the Asteroids rom">
    	<exec executable="${flex.mxmlc}" failonerror="true">
			<arg line="'${dir.source}/actionscript/Asteroids.as'"/>
			<arg line="-output='${dir.target}/rom.swf'"/>
			<arg line="-load-config+='${dir.config}/mxmlc-config.xml'"/>
		</exec>
	</target>
	
    <target name="package" depends="package-desktop, package-web" 
		description="package-desktop, package-web"/>
	
    <target name="package-desktop" description="collect the desktop version and its dependencies into a zip file">
		<mkdir dir="${dir.target}/temp-desktop"/>
		<copy file="${dir.target}/rom.swf" todir="${dir.target}/temp-desktop"/>
		<copy file="${dir.source}/resources/config/romloader-config-desktop.xml" tofile="${dir.target}/temp-desktop/romloader-config.xml"/>
		<unzip src="${dir.releases}/romloader-desktop.zip" dest="${dir.target}/temp-desktop">
			<patternset includes="${romloader.projector.name}"/>
			<mapper type="glob" from="${romloader.projector.name}" to="Asteroids${exe}"/>
		</unzip>
		<zip destfile="${dir.target}/Asteroids-desktop.zip" basedir="${dir.target}/temp-desktop"/>
	</target>
	
    <target name="package-web" description="collect the web-based version and its dependencies into a zip file">
		<mkdir dir="${dir.target}/temp-web"/>
		<copy todir="${dir.target}/temp-web">
			<fileset includes="**/*" dir="${dir.source}/resources/web"/>
		</copy>
		<copy file="${dir.target}/rom.swf" todir="${dir.target}/temp-web"/>
		<copy file="${dir.source}/resources/config/romloader-config-web.xml" tofile="${dir.target}/temp-web/romloader-config.xml"/>
		<unzip src="${dir.releases}/romloader-web.zip" dest="${dir.target}/temp-web">
			<patternset includes="romloader-web.swf"/>
			<mapper type="glob" from="romloader-web.swf" to="romloader.swf"/>
		</unzip>
		<zip destfile="${dir.target}/Asteroids-web.zip" basedir="${dir.target}/temp-web"/>
	</target>
	
	<target name="release" description="copy zips to ${dir.releases}/roms">
		<copy todir="${dir.releases}/roms" failonerror="false">
			<fileset dir="${dir.target}">
				<include name="**/*.zip"/>
			</fileset>
		</copy>
	</target>
	
	<target name="launch" unless="skip.rom.launches" description="launch the rom in the desktop romloader">
		<exec executable="${dir.target}/temp-desktop/Asteroids${exe}" failonerror="false"/>
	</target>

</project>

