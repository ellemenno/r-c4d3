<?xml version="1.0" encoding="UTF-8"?>

<project name="r-c4d3 tools: romloader (as3)" default="-usage" basedir="./">

<description>
Tasks to build and package the r-c4d3 romloaders.
</description>
	
	<property name="dir.trunk" value=".."/>
	<import file="../build_init.xml"/>
	
	<property name="dir.source" value="${basedir}/source"/>
	<property name="dir.config" value="${basedir}/config"/>
	<property name="dir.target" value="${basedir}/target"/>
	
	<property name="dir.documentation" value="${basedir}/../_documentation/romloader-api"/>
	<property name="dir.releases" value="${basedir}/../_releases"/>
	<property name="no.rom.launches" value="true"/>
	
	<property file="build.properties"/>
	
	
	<target name="-usage" description="ant &lt;target&gt;">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>
	
    <target name="build" depends="compile, document, package, release" 
		description="&gt; this is the main task: compile, document, package, release"/>
	
	<target name="clean" description="remove the contents of ${dir.target}">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dir.target}" includes="**/*"/>
		</delete>
	</target>
	
    <target name="compile" depends="compile-desktop, compile-web" 
		description="compile-desktop, compile-web"/>
	
    <target name="compile-desktop" depends="clean" description="compile the desktop romloader">
    	<exec executable="${flex.mxmlc}" failonerror="true">
			<arg line="'${dir.source}/actionscript/DesktopRomLoader.as'"/>
			<arg line="-output='${dir.target}/romloader-desktop.swf'"/>
			<arg line="-load-config+='${dir.config}/mxmlc-config_desktop.xml'"/>
		</exec>
	</target>
	
    <target name="compile-web" depends="clean" description="compile the web-based romloader">
    	<exec executable="${flex.mxmlc}" failonerror="true">
			<arg line="'${dir.source}/actionscript/RC4D3RomLoader.as'"/>
			<arg line="-output='${dir.target}/romloader-web.swf'"/>
			<arg line="-load-config+='${dir.config}/mxmlc-config_web.xml'"/>
		</exec>
	</target>
	
    <target name="document" depends="clean" description="create asdoc for the romloader classes">
		<mkdir dir="${dir.target}/asdoc"/>
		<tstamp>
			<format property="date.year" pattern="yyyy"/>
		</tstamp>
    	<exec executable="${flex.asdoc}">
			<arg line="-output='${dir.target}/asdoc'"/>
			<arg line="-footer='Copyleft ${date.year} Pixeldroid'"/>
			<arg line="-load-config+='${dir.config}/asdoc-config.xml'"/>
		</exec>
		<zip destfile="${dir.target}/romloader-api.zip" basedir="${dir.target}/asdoc"/>
		<copy todir="${dir.documentation}" failonerror="false">
			<fileset dir="${dir.target}/asdoc">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
    <target name="package" depends="package-desktop, package-web" 
		description="package-desktop, package-web"/>
	
    <target name="package-desktop" description="collect the desktop romloader and dependencies into a zip file">
		<mkdir dir="${dir.target}/temp-desktop"/>
		<copy file="${dir.source}/resources/romloader-config-desktop.xml" tofile="${dir.target}/temp-desktop/romloader-config.xml"/>
		<copy file="${dir.source}/resources/rom.swf" todir="${dir.target}/temp-desktop"/>
		<copy file="${dir.target}/romloader-desktop.swf" todir="${dir.target}/temp-desktop"/>
		<zip destfile="${dir.target}/romloader-desktop.zip" basedir="${dir.target}/temp-desktop"/>
	</target>
	
    <target name="package-web" description="collect the web-based romloader and dependencies into a zip file">
		<mkdir dir="${dir.target}/temp-web"/>
		<copy file="${dir.source}/resources/romloader-config-web.xml" tofile="${dir.target}/temp-web/romloader-config.xml"/>
		<copy file="${dir.source}/resources/index-web.html" todir="${dir.target}/temp-web"/>
		<copy file="${dir.target}/romloader-web.swf" todir="${dir.target}/temp-web"/>
		<zip destfile="${dir.target}/romloader-web.zip" basedir="${dir.target}/temp-web"/>
	</target>
	
	<target name="release" description="copy zips to ${dir.releases}">
		<copy file="${dir.target}/romloader-web.swf" todir="${dir.releases}"/>
		<copy todir="${dir.releases}" failonerror="false">
			<fileset dir="${dir.target}">
				<include name="**/*.zip"/>
			</fileset>
		</copy>
	</target>

</project>

